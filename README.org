* Prerequisites
- OS: One of Linux x86 (32/64), ARM (32/64), MIPS (32/64), PowerPC
  (32/64), S390X, SuperH, Microblaze, OpenRISC ([[https://www.musl-libc.org/intro.html][ref]]).
- Nim: [[https://nim-lang.org/]]
- *musl* library: [[https://www.musl-libc.org/download.html]]
  - Note the path to the ~musl-gcc~ binary.
* How to generate static binary
1. Update the ~muslGcc~ constant in ~config.nims~ with *your* path to
   ~musl-gcc~ binary.
2. Run ~nimble musl~.

That will generate ~hello_musl~ binary in the current directory.

- ~ldd ./hello_musl~ will print "not a dynamic executable".
- ~./hello_musl~ will print "Hello, World!"
* References
- [[https://github.com/nim-lang/Nim/wiki/Using-nimscript-for-configuration]]
- [[https://nim-lang.org/docs/nims.html]]
- [[https://hookrace.net/blog/nim-binary-size/#using-the-c-standard-library]]
- [[https://www.reddit.com/r/programming/comments/2wk7q6/static_linking_with_nim/corwtl7/]]
* TODO Todo-List
- [ ] Don't hard-code the ~muslGcc~ const in ~config.nims~
- [ ] Not require ~hello_musl.nimble~
  - Currently that is needed just to add the ~-d:musl~ and
    ~-d:release~ switches, and then to auto-run ~strip -s~.
  - So to remove dependency on this file, I need to figure out how to
    get the current /foo.nim/ file name from within the ~config.nims~.
- [ ] Figure out how to have ~nimble install~ install the binary
  generated by ~nimble musl~.

Eventual goal is to reuse the same ~config.nims~ for all projects. So
I cannot hardcode the ~pkgName~ as I do in ~hello_musl.nimble~.
