language: c
sudo: required

cache:
  directories:
    - nim
    - upx

env:
  global:
    - NIMREPO="https://github.com/nim-lang/Nim"
    - NIMVER="$(git ls-remote ${NIMREPO} devel | cut -f 1)"
    - NIMDIR="${PWD}/nim/${NIMVER}"
    - UPXVER="3.95"             # Change this value when upgrading upx

addons:
  apt:
    packages:
      # For building MUSL static builds on Linux.
      - musl-tools

install:
  - echo "NIMDIR = ${NIMDIR}"
  # After building nim, wipe csources to save on cache space.
  - "{ [ -f ${NIMDIR}/bin/nim ] && [ -f ${NIMDIR}/bin/nimble ]; } ||
      { rm -rf nim;
        mkdir -p nim;
        git clone --single-branch --branch devel --depth=1 ${NIMREPO} ${NIMDIR};
        cd ${NIMDIR};
        sh build_all.sh;
        rm -rf csources;
      }"
  - export PATH="${NIMDIR}/bin:$PATH"
  - nim -v

  - echo "Installing upx .."
  - "{ [ -f upx/$UPXVER/upx ]; } ||
      { curl -OL https://github.com/upx/upx/releases/download/v${UPXVER}/upx-${UPXVER}-amd64_linux.tar.xz;
        tar xvf upx-${UPXVER}-amd64_linux.tar.xz;
        mkdir -p upx;
        mv upx-${UPXVER}-amd64_linux upx/${UPXVER};
      }"
  - export PATH="$PWD/upx/${UPXVER}/:$PATH"
  - upx --version | grep -E '^upx'

script:
  # Compile the static binary using musl.
  - nim musl src/hello_musl.nim
  # See that the binary is not dynamic.
  - ldd ./src/hello_musl || true
  # Run the binary.
  - ./src/hello_musl

before_deploy:
  - cp ./src/hello_musl .
  - tar caf hello_musl.Linux_64bit_musl.tar.xz hello_musl
deploy:
  provider: releases
  api_key: "$GITHUB_OAUTH_TOKEN"
  file: "hello_musl.Linux_64bit_musl.tar.xz"
  skip_cleanup: true
  on:
    tags: true

# References:
# choosenim: https://github.com/mratsim/Arraymancer/blob/master/.travis.yml
# musl: https://github.com/BurntSushi/ripgrep/blob/master/.travis.yml
# nim build caching: https://github.com/status-im/nimbus/blob/master/.travis.yml
# https://docs.travis-ci.com/user/deployment/releases/
# https://github.com/nim-lang/Nim/wiki/TravisCI
